#
# `compose.yaml.sample` is required for smooth updates. Do not edit directly. Before use create rename copy `compose.yaml`
#
#version: '3.9'
services:
  mkcert:
    container_name: mkcert
    image: aegypius/mkcert-for-nginx-proxy:v1.0.2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./etc/mkcert/root_certs:/app/ca:rw
      - ./etc/nginx/certs:/app/certs:rw

  nginx-proxy:
    container_name: nginx-proxy
    image: nginxproxy/nginx-proxy:1.7-alpine
    labels:
      com.github.aegypius.mkcert-for-nginx-proxy.nginx_proxy: ''
    ports:
      - "80:80"
      - "443:443"
    environment:
      TRUST_DOWNSTREAM_PROXY: "false"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./etc/nginx/proxy.conf:/etc/nginx/conf.d/proxy.conf
      - ./etc/nginx/certs:/etc/nginx/certs
      - ./etc/nginx/dhparam:/etc/nginx/dhparam
    networks:
      default:
      nginx-proxy:

  phpmyadmin:
#    profiles: ["disabled"]
    container_name: phpmyadmin
    hostname: phpmyadmin-service.shared
    image: phpmyadmin/phpmyadmin
    ports:
      - "80"
    environment:
      PMA_HOSTS: hostname_db1,hostname_db2
      VIRTUAL_HOST: phpmyadmin.shared
      VIRTUAL_PORT: 80
      HTTPS_METHOD: noredirect
    volumes:
      - ./containers/phpmyadmin/etc/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
    networks:
      default:
      databases:

  mailpit:
#    profiles: ["disabled"]
    container_name: mailpit
    hostname: mailpit-service.shared
    image: axllent/mailpit:latest
    ports:
      - "8025"
      - "1025"
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
      VIRTUAL_HOST: webmail.shared
      VIRTUAL_PORT: 8025
      HTTPS_METHOD: noredirect
    volumes:
      - ./volumes/mailpit:/data
    networks:
      default:
      mail-services:

  elasticsearch:
#    profiles: ["disabled"]
    container_name: elasticsearch
    hostname: elasticsearch-service.shared
    build:
      context: containers/elasticsearch7/
#    logging:
#      driver: none # json-file|none|...
    ports:
      - "9200"
    volumes:
      - ./volumes/elasticsearch7:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      cluster.name: shared-elasticsearch
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms1012m -Xmx1012m -Dlog4j2.formatMsgNoLookups=true"
      VIRTUAL_HOST: elasticsearch.shared
      VIRTUAL_PORT: 9200
      HTTPS_METHOD: noredirect
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: [
        "CMD-SHELL",
        "curl -s -u 'admin:admin' -k http://localhost:9200/_cluster/health | grep -E -q '\"status\":\"(green|yellow)\"' || exit 1"
      ]
      interval: 10s
      timeout: 10s
      retries: 12
    networks:
      default:
      search-engine-net:
      elastic-net:

  eskibana:
    profiles: ["disabled"]
    container_name: eskibana
    hostname: eskibana-service.shared
    image: docker.elastic.co/kibana/kibana:7.7.1
    ports:
      - "5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      SERVER_NAME: eskibana.shared
      ELASTICSEARCH_URL: http://elasticsearch-service.shared:9200
      VIRTUAL_HOST: eskibana.shared
      VIRTUAL_PORT: 5601
      HTTPS_METHOD: noredirect
    networks:
     default:
     search-engine-net:
     elastic-net:

  opensearch:
#    profiles: ["disabled"]
    container_name: opensearch
    hostname: opensearch-service.shared
    build:
      context: containers/opensearch2/
#    logging:
#      driver: none # json-file|none|...
    ports:
      - "9200"
    volumes:
      - ./volumes/opensearch2:/usr/share/opensearch/data
    environment:
      discovery.type: single-node
      cluster.name: shared-opensearch
      bootstrap.memory_lock: "true"
      DISABLE_INSTALL_DEMO_CONFIG: "true"
      DISABLE_SECURITY_PLUGIN: "true"
      ES_JAVA_OPTS: "-Xms1012m -Xmx1012m -Dlog4j2.formatMsgNoLookups=true"
      OPENSEARCH_JAVA_OPTS: "-Xms1012m -Xmx1012m -Dlog4j2.formatMsgNoLookups=true"
      VIRTUAL_HOST: opensearch.shared
      VIRTUAL_PORT: 9200
      HTTPS_METHOD: noredirect
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: [
        "CMD-SHELL",
        "curl -s -u 'admin:admin' -k http://localhost:9200/_cluster/health | grep -E -q '\"status\":\"(green|yellow)\"' || exit 1"
      ]
      interval: 10s
      timeout: 10s
      retries: 12
    networks:
      default:
      search-engine-net:

  opensearch-dashboards:
    profiles: ["disabled"]
    container_name: opensearch-dashboards
    hostname: opensearch-dash-service.shared
    image: opensearchproject/opensearch-dashboards:2.19.1
    ports:
      - "5601"
    depends_on:
      opensearch:
        condition: service_healthy
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch-service.shared:9200"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: true
      VIRTUAL_HOST: opensearch-dash.shared
      VIRTUAL_PORT: 5601
      HTTPS_METHOD: noredirect
    networks:
      default:
      search-engine-net:

networks:
  search-engine-net:
    external: true
  # @deprecated
  elastic-net:
    external: true
  nginx-proxy:
    external: true
  databases:
    external: true
  mail-services:
    external: true
